//J B WS ALUop RA1   RA2   const    WA
  0 0 00 00000000000000000000011    00001 // reg[1] ← 0b11 загрузить константу `11` регистр 1 CONST
  0 0 10 00000000000000000000000    00010 // reg[2] ← sw_i загрузить значение с входа sw_i в регистр 2 
  0 0 00 00000000000000000011111    00011 // reg[3] ← b11111 загрузить константу b11111 (31) CONST
  0 0 11 00000000000000000000000    00100 // reg[4] ← b0 загрузить константу b0 (счетчик)
  0 0 00 00000000000000000000001    00101 // reg[5] <- 0b1 (1 для увеличения)

// начало цикла
  0 0 01 00001 00001 00100 00000000 00110 // reg[6] <- reg[1] << reg[4]
  0 0 01 00111 00010 00110 00000000 00111 // reg[7] <- reg[2] & reg[6]

// проверка на 00
  0 1 00 11001 00111 00000 00000010 00000 // if (reg[7] != reg[0]) PC <- PC + 2

  0 0 01 00000 00010 00110 00000000 00010 // reg[2] <- reg[2] | reg[6]
  0 0 01 00000 00100 00101 00000000 00100 // reg[4] <- reg[4] + reg[5] (1)
  0 1 00 11110 00100 00011 11111011 00000 // if (reg[4] < reg[3]) PC <- PC - 5
//конец цикла

  1 0 00 00000 00010 00000 00000000 00000 // out_o = reg[2], PC ← PC + 0